---
- name: Setup Kubernetes Cluster
  hosts: master
  become: true

  tasks:
    - name: Add Kubernetes YUM repository
      ansible.builtin.yum_repository:
        name: Kubernetes
        description: Kubernetes YUM repository
        baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
        gpgkey: https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
        gpgcheck: true

    - name: Install required packages
      yum:
        name:
          - docker
          - kubeadm-{{ k8s_version }}
          - kubelet-{{ k8s_version }}
          - kubectl-{{ k8s_version }}
        state: present

    - name: Start and enable kubelet
      ansible.builtin.service:
        name: kubelet
        enabled: true
        state: started

    - name: Start and enable Docker service
      systemd:
        name: docker
        state: started
        enabled: yes

    - name: Disable swap using sysctl
      sysctl:
        name: vm.swappiness
        value: 0
        state: present

    - name: Disable swap by turning off swap devices
      command: swapoff -a

    - name: Disable SElinux
      ansible.posix.selinux:
        state: disabled

    - name: Set up sysctl parameters for Kubernetes
      sysctl:
        name: "{{ item }}"
        value: "{{ sysctl_parameters[item] }}"
        state: present
      with_items:
        - net.bridge.bridge-nf-call-ip6tables
        - net.bridge.bridge-nf-call-iptables
        - net.ipv4.ip_forward
      become: true

    - name: Initialize Kubernetes Cluster with kubeadm
      command: kubeadm init --kubernetes-version={{ k8s_version }} --pod-network-cidr={{ calico_cidr }}
      register: kubeadm_output


    - name: Initialize Kubernetes Cluster with kubeadm
      command: "{{ item }}"
      with_items:
        - mkdir -p $HOME/.kube
        - cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
        - chown {{ ansible_user_id }}:{{ ansible_user_gid }} $HOME/.kube/config
    
    - name: Install Calico CNI
      command: kubectl apply -f {{ calico_url }}

    - name: Create join_command file
      ansible.builtin.file:
        path: $HOME/cltjoincommand.sh
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_gid }}"
        state: touch
        mode: "0755"
    
    - name: Fetch join command from Master node
      command: kubeadm token create --print-join-command
      register: join_command_raw

    - name: Write output to file
      ansible.builtin.lineinfile:
        path: $HOME/cltjoincommand.sh
        line: "{{ join_command_raw.stdout_lines[0] }}"

    # - name: Save kubeadm init output to a log file
    #   command: echo "{{ kubeadm_output.stdout_lines | join('\n') }}" > /tmp/kubeadm_out.log
    #   args:
    #     creates: /tmp/kubeadm_out.log
    

    # - name: Get kubeadm join command
    #   ansible.builtin.command: "{{ item }}"
    #   register: kubeadm_join_command_text
    #   with_items:
    #     - cat $HOME/kubeadm_out.log | grep -A1 'kubeadm join' >> /tmp/cltjoincommand.sh
    #     - chmod +x tmp/cltjoincommand.sh
    #     - cat /tmp/cltjoincommand.sh
    
    # - name: Save kubeadm join command
    #   set_fact:
    #     kubeadm_join_command: "{{ kubeadm_join_command_text }}"

    - name: Display kubeadm join command
      debug:
        var: join_command_raw

  vars:
    k8s_version: "1.21.4"
    calico_version: "3.19"
    calico_cidr: "192.168.0.0/16"
    calico_url: "https://docs.projectcalico.org/archive/v{{ calico_version }}/manifests/calico.yaml"
    sysctl_parameters:
      net.bridge.bridge-nf-call-ip6tables: 1
      net.bridge.bridge-nf-call-iptables: 1
      net.ipv4.ip_forward: 1
