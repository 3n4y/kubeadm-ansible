- name: Disable swap by turning off swap devices
  ansible.builtin.command: swapoff -a
  changed_when: true

- name: Disable SElinux
  ansible.posix.selinux:
    state: disabled

# - name: Add Kubernetes YUM repository
#   ansible.builtin.yum_repository:
#     name: kubernetes
#     description: kubernetes
#     baseurl: https://pkgs.k8s.io/core:/stable:/v1.29/rpm/
#     gpgkey: https://pkgs.k8s.io/core:/stable:/v1.29/rpm/repodata/repomd.xml.key
#     gpgcheck: true
#     enabled: true
#     exclude: kubelet kubeadm kubectl

- name: Install yum util
  ansible.builtin.yum:
    name: yum
    state: present

- name: Set up docker repo
  ansible.builtin.command: yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
  changed_when: true


- name: Install required packages
  ansible.builtin.yum:
    name:
      - docker-ce-{{ docker_version }}
      - socat
      - conntrack
    state: present

# - name: install kubelet
#   ansible.builtin.command: yum install -y kubelet kubeadm kubectl --disableexcludes=kubernetes
#   changed_when: true

- name: Install kubeadm, kubelet and kubectl without packages
  ansible.builtin.command:
    cmd: "{{ item }}"
    chdir: "{{ DOWNLOAD_DIR }}"
  with_items:
    - sudo curl -L --remote-name-all https://dl.k8s.io/release/{{ RELEASE }}/bin/linux/{{ ARCH }}/{kubeadm,kubelet,kubectl}
    - sudo chmod +x kubeadm kubelet kubectl
  changed_when: true

- name: Download kubelet service file and save
  ansible.builtin.command: |
    sudo curl -sSL "https://raw.githubusercontent.com/kubernetes/release/{{RELEASE_VERSION}}/cmd/krel/templates/latest/kubelet/kubelet.service"
  register: kubelet_service_config
  changed_when: true

- name: Store kubelet config data in file
  ansible.builtin.copy:
    content: "{{ kubelet_service_config.stdout }}"
    dest: /usr/lib/systemd/system/kubelet.service
    mode: "0644"
  changed_when: true

- name: Download kubelet.service.d content
  ansible.builtin.command: |
    sudo curl -sSL "https://raw.githubusercontent.com/kubernetes/release/{{RELEASE_VERSION}}/cmd/krel/templates/latest/kubeadm/10-kubeadm.conf"
  register: kubelet_service_kubeadm
  changed_when: true

- name: Create kubelet.service.d directory
  ansible.builtin.file:
    path: /usr/lib/systemd/system/kubelet.service.d
    state: directory
    mode: "0644"

- name: Store kubelet config data in file
  ansible.builtin.copy:
    content: "{{ kubelet_service_kubeadm.stdout }}"
    dest: /usr/lib/systemd/system/kubelet.service.d/10-kubeadm.conf
    mode: "0644"
  changed_when: true

# add the code here before you start and enable the kubelet service
- name: Update kubelet config to prevent crash on centos7
  ansible.builtin.copy:
    content: |
      KUBELET_EXTRA_ARGS= --runtime-cgroups=/systemd/system.slice --kubelet-cgroups=/systemd/system.slice --cgroup-driver=systemd
    dest: /etc/sysconfig/kubelet
    mode: "0744"

- name: Start and enable kubelet
  ansible.builtin.service:
    name: kubelet
    enabled: true
    state: started

- name: Start and enable Docker service
  ansible.builtin.systemd:
    name: docker
    state: started
    enabled: true

- name: Configure docker daemon
  ansible.builtin.copy:
    content: |
      {
        "exec-opts": [
            "native.cgroupdriver=systemd"
        ],
        "log-driver": "json-file",
        "log-opts": {
            "max-size": "256m"
        },
        "storage-driver": "overlay2",
        "storage-opts": [
            "overlay2.override_kernel_check=true"
        ]
      }
    dest: /etc/docker/daemon.json
    mode: "0644"

- name: Restart daemon and docker service
  become: true
  ansible.builtin.systemd:
    name: docker
    state: restarted
    daemon_reload: true

- name: Set up sysctl parameters for Kubernetes
  ansible.posix.sysctl:
    name: "{{ item }}"
    value: "{{ sysctl_parameters[item] }}"
    state: present
  with_items:
    - net.bridge.bridge-nf-call-ip6tables
    - net.bridge.bridge-nf-call-iptables
    - net.ipv4.ip_forward
  become: true
