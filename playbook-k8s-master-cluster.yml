---

# Play 1
# ------------------------
- name: Install all prerequisites, the dockerd, and Kubernetes components (kubeadm, kubectl, kubelet)
  hosts: all
  become: true
  vars_files:
    - vars/external_vars.yml
  tasks:

    - name: Run the prerequisite setup
      ansible.builtin.include_tasks: tasks-shared-setup.yaml


# Play 2
# ------------------------
# - name: Install kube-vip, and initialize a cluster onto the first Master node
#   hosts: first_master_node
#   become: true
#   vars_files:
#     - vars/external_vars.yml
#   tasks:

#     - name: Pull the image for kube-vip
#       ansible.builtin.command: docker image pull docker.io/plndr/kube-vip:0.3.4
#       changed_when: true

#     - name: Generate the static pod yaml file for kube-vip and place into /etc/kubernetes/manifests
#       ansible.builtin.command: |
#         docker run --network host --rm ghcr.io/kube-vip/kube-vip:v0.3.9 manifest pod --interface eth1 --address {{kube_vip}}
#         --controlplane --arp --leaderElection
#       register: static_pod_output
#       changed_when: true
#       # args:
#         # creates: /etc/kubernetes/manifests/vip.yaml

#     - name: Write output to static pod yaml
#       ansible.builtin.copy:
#         content: "{{ static_pod_output.stdout }}"
#         dest: /etc/kubernetes/manifests/vip.yaml
#         mode: "0644"

#   # Source: https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/create-cluster-kubeadm/

#     - name: Create the file kubeadm-config.yaml in /tmp/
#       ansible.builtin.copy:
#         content: |
#           kind: ClusterConfiguration
#           apiVersion: kubeadm.k8s.io/v1beta2
#           controlPlaneEndpoint: "{{ kube_vip }}:6443"
#           networking:
#             podSubnet: "{{ pod_subnet }}"
#           ---
#           kind: KubeletConfiguration
#           apiVersion: kubelet.config.k8s.io/v1beta1
#           cgroupDriver: systemd
#         dest: /tmp/kubeadm-config.yaml
#         mode: "0644"

#     # - name: Initialize the cluster using the config file
#     #   ansible.builtin.command: |
#     #     kubeadm init --config /tmp/kubeadm-config.yaml --upload-certs --v=5
#     #   changed_when: true
#     #   register: kube_init_output

    # - name: Initialize Kubernetes Cluster with kubeadm
    #   ansible.builtin.command: |
    #     kubeadm init --apiserver-advertise-address={{ kube_vip }} --kubernetes-version={{ k8s_version }} --pod-network-cidr={{ calico_cidr }}
    #     --control-plane-endpoint="{{ kube_vip }}:6443" --upload-certs
    #   register: kube_init_output
    #   changed_when: true

    # - name: Register Kubeadm output to file
    #   ansible.builtin.copy:
    #     content: "{{ kube_init_output.stdout }}"
    #     dest: /etc/kubernetes/ansible-installed-k8s
    #     mode: "0644"

    # - name: Copy kubeconfig file to .kube directory
    #   ansible.builtin.command: "{{ item }}"
    #   with_items:
    #     - mkdir -p $HOME/.kube
    #     - cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
    #     - chown {{ ansible_user_id }}:{{ ansible_user_gid }} $HOME/.kube/config
    #   changed_when: true

    # - name: Install Calico CNI
    #   ansible.builtin.command: kubectl apply -f {{ calico_url }}
    #   changed_when: true
    #   register: ansible_installed_calico

#     - name: Store yaml file
#       ansible.builtin.copy:
#         content: "{{ ansible_installed_calico.stdout }}"
#         dest: /etc/kubernetes/ansible-installed-calico.yaml
#         mode: "0644"

#   # Source: https://kubernetes.io/docs/reference/setup-tools/kubeadm/kubeadm-join/

#     - name: Generate the command to join a node and assign it to a variable
#       ansible.builtin.command: kubeadm token create --print-join-command
#       register: join_command
#       changed_when: true

#     - name: Generate the certificate key and assign it to a variable
#       ansible.builtin.command: kubeadm init phase upload-certs --upload-certs
#       register: certificate_key
#       changed_when: true

#     - name: Copy the join command for a Master node to a local file
#       ansible.builtin.copy:
#         content: "{{ join_command.stdout_lines[0] }} --control-plane --certificate-key {{ certificate_key.stdout_lines[2] }}"
#         dest: "./join-command-master"
#         mode: "0755"
#       delegate_to: localhost


#     - name: Copy the join command for a Worker node to a local file
#       ansible.builtin.copy:
#         content: "{{ join_command.stdout_lines[0] }}"
#         dest: "./join-command-worker"
#         mode: "0755"
#       delegate_to: localhost


# Play 3
# ------------------------
# - name: Join the other Master nodes to the cluster
#   hosts: other_master_nodes
#   become: true
#   vars_files:
#     - vars/external_vars.yml
#   tasks:

#     - name: Copy the join command to the other Master nodes
#       ansible.builtin.copy:
#         src: join-command-master
#         dest: /tmp/join-command-master.sh
#         mode: '0744'

#     - name: Join the other Master nodes to cluster
#       ansible.builtin.command: |
#         sh /tmp/join-command-master.sh
#       register: join_command_master
#       changed_when: true

#     - name: Write command to file
#       ansible.builtin.copy:
#         content: "{{ join_command_master.stdout }}"
#         dest: /etc/kubernetes/ansible-installed-k8s
#         mode: "0644"

#   # Due to an oddity with kubeadm, join additional Master nodes first, then configure the kube-vip manifest file
#     - name: Generate the static pod yaml file for kube-vip and place into /etc/kubernetes/manifests
#       ansible.builtin.command: |
#         docker run --network host --rm ghcr.io/kube-vip/kube-vip:v0.3.9 manifest pod --interface eth1 --address {{kube_vip}}
#         --controlplane --arp --leaderElection
#       register: static_pod_output
#       changed_when: true

#     - name: Write output to static pod yaml
#       ansible.builtin.copy:
#         content: "{{ static_pod_output.stdout }}"
#         dest: /etc/kubernetes/manifests/vip.yaml
#         mode: "0644"

# # Play 4
# # ------------------------
# - name: Join the Worker nodes to the cluster
#   hosts: worker-nodes
#   become: true
#   tasks:

#     - name: Copy the join command to the Worker node
#       ansible.builtin.copy:
#         src: join-command-worker
#         dest: /tmp/join-command-worker.sh
#         mode: '0755'

#     - name: Join the Worker nodes to cluster
#       ansible.builtin.command: |
#         sh /tmp/join-command-worker.sh
#       register: join_command_worker
#       changed_when: true
#       #   touch /etc/kubernetes/ansible-installed-k8s
#       # args:
#       #   creates: /etc/kubernetes/ansible-installed-k8s

#     - name: Write command to file
#       ansible.builtin.copy:
#         content: "{{ join_command_worker.stdout }}"
#         dest: /etc/kubernetes/ansible-installed-k8s
#         mode: "0644"
